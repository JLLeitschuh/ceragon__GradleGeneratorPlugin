package com.ceragon.monkeygame.hall.command.login;

import com.ceragon.monkeygame.engine.websocket.packet.CSPacket;
import com.ceragon.monkeygame.proto.HOpCommand;
import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.hash.TIntObjectHashMap;
import io.netty.channel.Channel;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

import java.io.IOException;

@Component
@Slf4j
public class LoginCommandManager implements InitializingBean {
    private TIntObjectMap<ILoginCommand> commandMap;
    private final ApplicationContext context;

    @Autowired
    public LoginCommandManager(ApplicationContext context) {
        this.context = context;
    }

    @Override
    public void afterPropertiesSet() throws Exception {
        this.commandMap = new TIntObjectHashMap<>();
        #set($messageList = $proto.messageList)
        #foreach($message in $messageList)
            #if($util.endsWith($message.name, "request"))
        this.commandMap.put(HOpCommand.${message.name}, context.getBean(${message.name}Command.class));
            #end
        #end
    }

    public void runCommand(Channel channel, int commandId, CSPacket packet) {
        ILoginCommand loginCommand = commandMap.get(commandId);
        if (loginCommand == null) {
            log.error("LoginCommandManager runCommand the commandId is not register.id={}", commandId);
            return;
        }
        try {
            loginCommand.execute(channel, packet);
        } catch (Throwable e) {
            log.error(String.format("command=%d,channel=%s error=%s",
                    commandId, channel.id().asLongText(), e.getMessage()), e);
        }
    }


    public interface ILoginCommand {
        void execute(Channel channel, CSPacket packet) throws IOException;
    }

}
