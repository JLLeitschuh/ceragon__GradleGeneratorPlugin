buildscript {
    repositories {
        mavenLocal()
        gradlePluginPortal()
//        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.ceragon:plugin:1.2'
    }
}

apply plugin: 'io.github.ceragon.proto'


proto {
    protocVersion = "3.11.4"
//    protocCommand = getProtocPath()
    deleteFile(fileTree(dir: 'build/generated-sources', include: '**/*.java'))

    outputTargets {
        javaCode {
            type = "java"
        }
        cppCode {
            type = "cpp"
        }
    }
    // 获取全部的协议，用于生成文件
    totalMsgBuilds {
        commandCode {
            // template 目录下的模板名称
            vmFile = "HOpCommand.vm"
            targetFile = baseDir("build/java/com/ceragon/monkeygame/proto/HOpCommand.java")
        }
    }
    // 遍历每个message，用于生成文件
    everyMsgBuilds {
        build1 {
            vmFile = "LoginMsgCommand.vm"
            targetFile = baseDir('build/java/com/ceragon/monkeygame/hall/command/login/${MsgName}Command.java')
            overwrite = false
            // message 名字匹配规则，支持正则表达式
            msgNameMatch = [".*Request"]
            // proto 文件名称匹配规则，支持正则表达式
            protoNameMatch = [".*ProtoLogin.proto"]
        }
        build2 {
            vmFile = "IMsgCommand.vm"
            targetFile = baseDir('build/java/com/ceragon/monkeygame/command/I${MsgName}Command.java')
            overwrite = true
            msgNameMatch = [".*Request"]
            protoNameMatch = [".*"]
        }
    }
    // 遍历每个proto文件，用于生成文件
    everyProtoBuilds {
        build1 {
            vmFile = "LoginCommandManager.vm"
            targetFile = baseDir('build/java/com/ceragon/monkeygame/hall/command/login/LoginCommandManager.java')
            // proto 文件名称匹配规则，支持正则表达式
            protoNameMatch = [".*ProtoLogin.proto"]
        }
    }
}