subprojects {

    apply plugin: "java-gradle-plugin"
    apply plugin: 'maven-publish'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    group = "io.github.ceragon"
    version = "1.1"

    repositories {
        // Use Maven Central for resolving dependencies.
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        // Use JUnit Jupiter for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'org.apache.velocity:velocity-engine-core:2.2'
        implementation 'commons-lang:commons-lang:2.4'
        implementation 'org.yaml:snakeyaml:1.29'
        implementation 'commons-io:commons-io:2.11.0'

        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'
    }
    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    publishing {
        repositories {
            mavenLocal()
        }
    }


}

task copySimpleExample(type: Copy) {
    from('plugin-example') {
        include 'gradle/**'
        include 'protofiles/Foo.proto'
        include 'simple-build.gradle'
        include 'gradlew'
        include 'gradlew.bat'
        include 'proto-build.bat'
        include 'proto-build.sh'
        include 'settings.gradle'
    }
    into('build/example/proto-simple')
    rename('simple-build.gradle', 'build.gradle')
}

task zipSimpleExample(type: Zip, dependsOn: copySimpleExample) {
    from('build/example/proto-simple')
    destinationDirectory = layout.buildDirectory.dir("example")
    archiveFileName = "proto-simple.zip"
}

task copyFullExample(type: Copy) {
    from('plugin-example') {
        include 'gradle/**'
        include 'protofiles/**'
        include 'template/**'
        include 'full-build.gradle'
        include 'gradlew'
        include 'gradlew.bat'
        include 'proto-build.bat'
        include 'proto-build.sh'
        include 'settings.gradle'
        exclude 'protofiles/Foo.proto'
    }
    into('build/example/proto-full')
    rename('full-build.gradle', 'build.gradle')
}

task zipFullExample(type: Zip, dependsOn: copyFullExample) {
    from('build/example/proto-full')
    destinationDirectory = layout.buildDirectory.dir("example")
    archiveFileName = "proto-full.zip"
}

task cleanExample() {
    doLast {
        delete('build/example')
    }
}

task zipAllExample(dependsOn: [cleanExample, zipSimpleExample, zipFullExample]) {
    doLast {
        println 'success'
    }
}